import datetime
import json
from typing import Dict, Optional

import boto3

S3 = boto3.resource("s3")
# TODO: maybe they should be somehow exported from Terraform or added as environment variable?
SOURCES_HASHES_OBJECT = S3.Object(
    "jszafran-data-lake",
    "etl-metadata/eurostat-weekly-deaths/data-source-hashes.json",
)
ENCODING = "UTF-8"
DATA_SOURCE_URL = "https://ec.europa.eu/eurostat/estat-navtree-portlet-prod/BulkDownloadListing?file=data/demo_r_mwk_05.tsv.gz"  # noqa

HashHistory = Dict[datetime.datetime, str]


def get_data_sources_hash_history() -> HashHistory:
    """
    Fetches data source hashes history from S3.
    """
    sources_hash_history = {}
    try:
        sources_hash_history = json.loads(
            SOURCES_HASHES_OBJECT.get()["Body"].read().decode(ENCODING)
        )
        sources_hash_history = {
            datetime.datetime.fromisoformat(k): v
            for k, v in sources_hash_history.items()
        }
    except S3.meta.client.exceptions.NoSuchKey:
        pass
    return sources_hash_history


def save_sources_hash_history(hash_history: HashHistory) -> None:
    hash_history = {k.isoformat(): v for k, v in hash_history.items()}
    SOURCES_HASHES_OBJECT.put(Body=bytes(json.dumps(hash_history).encode(ENCODING)))


def get_most_recent_hash(hash_history: HashHistory) -> Optional[str]:
    if len(hash_history) == 0:
        return None
    return sorted(hash_history.items(), key=lambda x: x[0], reverse=True)[0][1]
